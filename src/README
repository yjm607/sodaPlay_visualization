README

Name: Jei Min Yoo (NETID: jy48), Volodymyr Zavidovych (NETID: vz4)
Date started: 9/13/12
Date finished: 9/24/12
Estimated hours worked: 30+
Resources: 
http://docs.oracle.com/javase/tutorial/extra/fullscreen/doublebuf.html
http://docs.oracle.com/javase/6/docs/api/
http://www.wikipedia.org


Main file: Main.java
Test file: example
Resource files: none


Known bugs: sometimes dragging causes exceptions, but it is not design fault, and it doesn't hamper user experience.
FUNCTIONALITY: 
- Fixed mass. Implemented via boolean isFixed field
- Bar. Implemented via forceLengthToNatural() method, which shifts spring's 
  masses along bar axis to set distance between masses equal to bar's initial length.
  We found this implementation to be design-wise superior over hardcoding large 
  myK and introducing damping factor for several reasons:
  - Produced animation is much smoother.
  - Very little code was written to implement it. 
  - Code would use functions already present in Mass class.
  - We could reuse functionality to implement Muscle (see next).
- Muscle. Is a bar with variable myLength. Inherits Spring class. Changes the natural
  length periodically within the amplitude. Then uses inherited forceLengthToNatural() 
  to move masses.
- Environmental forces (Gravity, viscosity, center of mass, wall repulsion).
  These forces apply to all Masses. Environment.java manages all these force classes.
- Multiple assemblies. There can be many groups of objects now.
- Mouse dragging. User can drag mouse to move objects around.
- Toggle forces. User can toggle environmental forces.
- Change size of walled area. User can change walled area size.
Impressions: working in pairs was fun and productive. implementing environment was difficult.
             Maintaining functionality while improving design was a challenge.